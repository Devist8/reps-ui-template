{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\"; //import { authTokenMiddleWare } from \"./sagas\";\n\nimport createSagaMiddleware from \"redux-saga\";\nimport userReducer from \"reducers/userReducer\";\nimport uiReducer from \"reducers/uiReducer\";\nimport dataReducer from \"./reducers/dataReducer\";\nconst initialState = {};\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [thunk, sagaMiddleware];\nconst reducers = combineReducers({\n  // chat: chatReducer,\n  data: dataReducer,\n  //store: storeReducer,\n  // studio: studioReducer,\n  user: userReducer,\n  ui: uiReducer\n});\nconst store = createStore(reducers, initialState, compose(applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f)); //sagaMiddleware.run(authTokenMiddleWare);\n\nexport default store;","map":{"version":3,"sources":["C:/Reps/reps-ui-template/src/redux/store.js"],"names":["createStore","combineReducers","applyMiddleware","compose","thunk","createSagaMiddleware","userReducer","uiReducer","dataReducer","initialState","sagaMiddleware","middleware","reducers","data","user","ui","store","window","__REDUX_DEVTOOLS_EXTENSION__","f"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,cAAc,GAAGL,oBAAoB,EAA3C;AACA,MAAMM,UAAU,GAAG,CAACP,KAAD,EAAQM,cAAR,CAAnB;AAEA,MAAME,QAAQ,GAAGX,eAAe,CAAC;AAC7B;AACAY,EAAAA,IAAI,EAAEL,WAFuB;AAI7B;AACA;AACAM,EAAAA,IAAI,EAAER,WANuB;AAO7BS,EAAAA,EAAE,EAAER;AAPyB,CAAD,CAAhC;AAUA,MAAMS,KAAK,GAAGhB,WAAW,CACrBY,QADqB,EAErBH,YAFqB,EAGrBN,OAAO,CACHD,eAAe,CAAC,GAAGS,UAAJ,CADZ,EAEHM,MAAM,CAACC,4BAAP,GACMD,MAAM,CAACC,4BAAP,EADN,GAEOC,CAAD,IAAOA,CAJV,CAHc,CAAzB,C,CAUA;;AACA,eAAeH,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n//import { authTokenMiddleWare } from \"./sagas\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport userReducer from \"reducers/userReducer\";\r\nimport uiReducer from \"reducers/uiReducer\";\r\nimport dataReducer from \"./reducers/dataReducer\";\r\n\r\nconst initialState = {};\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleware = [thunk, sagaMiddleware];\r\n\r\nconst reducers = combineReducers({\r\n    // chat: chatReducer,\r\n    data: dataReducer,\r\n\r\n    //store: storeReducer,\r\n    // studio: studioReducer,\r\n    user: userReducer,\r\n    ui: uiReducer,\r\n});\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__\r\n            ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n            : (f) => f\r\n    )\r\n);\r\n//sagaMiddleware.run(authTokenMiddleWare);\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}