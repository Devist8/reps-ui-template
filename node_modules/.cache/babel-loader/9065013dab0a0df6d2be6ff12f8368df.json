{"ast":null,"code":"var _jsxFileName = \"C:\\\\Reps\\\\reps-ui-template\\\\src\\\\components\\\\adminEcommerce\\\\CustomTable.jsx\",\n    _s = $RefreshSig$();\n\nimport { ArrowRightAlt } from \"@mui/icons-material\";\nimport { Box, ButtonBase, Stack, Table, TableBody, TableCell, TableHead, TableRow, useTheme } from \"@mui/material\";\nimport { StyledPagination } from \"components/dataTable/dataTableV2/styledComponents\";\nimport FlexBox from \"components/FlexBox\";\nimport { H5 } from \"components/Typography\";\nimport { useMemo } from \"react\";\nimport { useExpanded, usePagination, useRowSelect, useSortBy, useTable } from \"react-table\";\nimport ScrollBar from \"simplebar-react\"; // component props interface\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomTable = props => {\n  _s();\n\n  const {\n    data,\n    rowClick,\n    showFooter,\n    columnShape,\n    hidePagination\n  } = props; // hooks\n\n  const theme = useTheme();\n  const tableData = useMemo(() => data, [data]);\n  const columns = useMemo(() => columnShape, [columnShape]);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    pageOptions,\n    gotoPage\n  } = useTable({\n    columns,\n    data: tableData\n  }, useSortBy, useExpanded, usePagination, useRowSelect); // handle pagination\n\n  const handleChange = (_e, currentPageNo) => {\n    gotoPage(currentPageNo - 1);\n  }; // table border color\n\n\n  const borderColor = theme.palette.mode === \"light\" ? \"text.secondary\" : \"divider\";\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(ScrollBar, {\n      children: /*#__PURE__*/_jsxDEV(Table, { ...getTableProps(),\n        sx: {\n          borderSpacing: \"0 1rem\",\n          borderCollapse: \"separate\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(TableRow, { ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(TableCell, { ...column.getHeaderProps(column.getSortByToggleProps()),\n              sx: {\n                paddingY: 0,\n                fontSize: 13,\n                fontWeight: 600,\n                borderBottom: 0,\n                color: \"text.disabled\",\n                width: column.width,\n                minWidth: column.minWidth,\n                maxWidth: column.maxWidth,\n                \"&:last-child\": {\n                  textAlign: \"center\"\n                }\n              },\n              children: column.render(\"Header\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, { ...getTableBodyProps(),\n          children: page.map(row => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(TableRow, { ...row.getRowProps(),\n              onClick: rowClick && rowClick(row.original),\n              sx: {\n                backgroundColor: \"background.paper\",\n                cursor: rowClick ? \"pointer\" : \"unset\",\n                \"& td:first-of-type\": {\n                  borderLeft: \"1px solid\",\n                  borderTopLeftRadius: \"8px\",\n                  borderBottomLeftRadius: \"8px\",\n                  borderColor\n                },\n                \"& td:last-of-type\": {\n                  textAlign: \"center\",\n                  borderRight: \"1px solid\",\n                  borderTopRightRadius: \"8px\",\n                  borderBottomRightRadius: \"8px\",\n                  borderColor\n                },\n                \"&:last-of-type .MuiTableCell-root\": {\n                  borderBottom: theme.palette.mode === \"dark\" ? `1px solid ${theme.palette.divider} !important` : `1px solid ${theme.palette.text.secondary} !important`\n                }\n              },\n              children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(TableCell, { ...cell.getCellProps(),\n                sx: {\n                  fontSize: 13,\n                  fontWeight: 500,\n                  color: \"text.disabled\",\n                  borderTop: \"1px solid\",\n                  borderBottom: \"1px solid\",\n                  borderColor\n                },\n                children: cell.render(\"Cell\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), !hidePagination && /*#__PURE__*/_jsxDEV(Stack, {\n      alignItems: \"flex-end\",\n      marginY: 1,\n      children: /*#__PURE__*/_jsxDEV(StyledPagination, {\n        count: pageOptions.length,\n        shape: \"rounded\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }, this), showFooter && /*#__PURE__*/_jsxDEV(FlexBox, {\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(H5, {\n        color: \"text.disabled\",\n        children: \"Showing 1-12 of 24 result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ButtonBase, {\n        disableRipple: true,\n        sx: {\n          fontSize: 14,\n          fontWeight: 600\n        },\n        children: [\"See All\", /*#__PURE__*/_jsxDEV(ArrowRightAlt, {\n          sx: {\n            marginLeft: 0.5\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CustomTable, \"irN9W5z59mPgObTouj0q7hx98ig=\", false, function () {\n  return [useTheme, useTable];\n});\n\n_c = CustomTable;\nexport default CustomTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomTable\");","map":{"version":3,"sources":["C:/Reps/reps-ui-template/src/components/adminEcommerce/CustomTable.jsx"],"names":["ArrowRightAlt","Box","ButtonBase","Stack","Table","TableBody","TableCell","TableHead","TableRow","useTheme","StyledPagination","FlexBox","H5","useMemo","useExpanded","usePagination","useRowSelect","useSortBy","useTable","ScrollBar","CustomTable","props","data","rowClick","showFooter","columnShape","hidePagination","theme","tableData","columns","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","pageOptions","gotoPage","handleChange","_e","currentPageNo","borderColor","palette","mode","borderSpacing","borderCollapse","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","paddingY","fontSize","fontWeight","borderBottom","color","width","minWidth","maxWidth","textAlign","render","row","getRowProps","original","backgroundColor","cursor","borderLeft","borderTopLeftRadius","borderBottomLeftRadius","borderRight","borderTopRightRadius","borderBottomRightRadius","divider","text","secondary","cells","cell","getCellProps","borderTop","length","marginLeft"],"mappings":"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","sourcesContent":["import { ArrowRightAlt } from \"@mui/icons-material\";\nimport {\n    Box,\n    ButtonBase,\n    Stack,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    useTheme,\n} from \"@mui/material\";\nimport { StyledPagination } from \"components/dataTable/dataTableV2/styledComponents\";\nimport FlexBox from \"components/FlexBox\";\nimport { H5 } from \"components/Typography\";\nimport { useMemo } from \"react\";\nimport {\n    useExpanded,\n    usePagination,\n    useRowSelect,\n    useSortBy,\n    useTable,\n} from \"react-table\";\nimport ScrollBar from \"simplebar-react\"; // component props interface\n\nconst CustomTable = (props) => {\n    const { data, rowClick, showFooter, columnShape, hidePagination } = props; // hooks\n\n    const theme = useTheme();\n    const tableData = useMemo(() => data, [data]);\n    const columns = useMemo(() => columnShape, [columnShape]);\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        page,\n        pageOptions,\n        gotoPage,\n    } = useTable(\n        {\n            columns,\n            data: tableData,\n        },\n        useSortBy,\n        useExpanded,\n        usePagination,\n        useRowSelect\n    ); // handle pagination\n\n    const handleChange = (_e, currentPageNo) => {\n        gotoPage(currentPageNo - 1);\n    }; // table border color\n\n    const borderColor =\n        theme.palette.mode === \"light\" ? \"text.secondary\" : \"divider\";\n    return (\n        <Box>\n            <ScrollBar>\n                <Table\n                    {...getTableProps()}\n                    sx={{\n                        borderSpacing: \"0 1rem\",\n                        borderCollapse: \"separate\",\n                    }}\n                >\n                    <TableHead>\n                        {headerGroups.map((headerGroup) => (\n                            <TableRow {...headerGroup.getHeaderGroupProps()}>\n                                {headerGroup.headers.map((column) => (\n                                    <TableCell\n                                        {...column.getHeaderProps(\n                                            column.getSortByToggleProps()\n                                        )}\n                                        sx={{\n                                            paddingY: 0,\n                                            fontSize: 13,\n                                            fontWeight: 600,\n                                            borderBottom: 0,\n                                            color: \"text.disabled\",\n                                            width: column.width,\n                                            minWidth: column.minWidth,\n                                            maxWidth: column.maxWidth,\n                                            \"&:last-child\": {\n                                                textAlign: \"center\",\n                                            },\n                                        }}\n                                    >\n                                        {column.render(\"Header\")}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        ))}\n                    </TableHead>\n\n                    <TableBody {...getTableBodyProps()}>\n                        {page.map((row) => {\n                            prepareRow(row);\n                            return (\n                                <TableRow\n                                    {...row.getRowProps()}\n                                    onClick={rowClick && rowClick(row.original)}\n                                    sx={{\n                                        backgroundColor: \"background.paper\",\n                                        cursor: rowClick ? \"pointer\" : \"unset\",\n                                        \"& td:first-of-type\": {\n                                            borderLeft: \"1px solid\",\n                                            borderTopLeftRadius: \"8px\",\n                                            borderBottomLeftRadius: \"8px\",\n                                            borderColor,\n                                        },\n                                        \"& td:last-of-type\": {\n                                            textAlign: \"center\",\n                                            borderRight: \"1px solid\",\n                                            borderTopRightRadius: \"8px\",\n                                            borderBottomRightRadius: \"8px\",\n                                            borderColor,\n                                        },\n                                        \"&:last-of-type .MuiTableCell-root\": {\n                                            borderBottom:\n                                                theme.palette.mode === \"dark\"\n                                                    ? `1px solid ${theme.palette.divider} !important`\n                                                    : `1px solid ${theme.palette.text.secondary} !important`,\n                                        },\n                                    }}\n                                >\n                                    {row.cells.map((cell) => (\n                                        <TableCell\n                                            {...cell.getCellProps()}\n                                            sx={{\n                                                fontSize: 13,\n                                                fontWeight: 500,\n                                                color: \"text.disabled\",\n                                                borderTop: \"1px solid\",\n                                                borderBottom: \"1px solid\",\n                                                borderColor,\n                                            }}\n                                        >\n                                            {cell.render(\"Cell\")}\n                                        </TableCell>\n                                    ))}\n                                </TableRow>\n                            );\n                        })}\n                    </TableBody>\n                </Table>\n            </ScrollBar>\n\n            {!hidePagination && (\n                <Stack alignItems=\"flex-end\" marginY={1}>\n                    <StyledPagination\n                        count={pageOptions.length}\n                        shape=\"rounded\"\n                        onChange={handleChange}\n                    />\n                </Stack>\n            )}\n\n            {showFooter && (\n                <FlexBox alignItems=\"center\" justifyContent=\"space-between\">\n                    <H5 color=\"text.disabled\">Showing 1-12 of 24 result</H5>\n                    <ButtonBase\n                        disableRipple\n                        sx={{\n                            fontSize: 14,\n                            fontWeight: 600,\n                        }}\n                    >\n                        See All\n                        <ArrowRightAlt\n                            sx={{\n                                marginLeft: 0.5,\n                            }}\n                        />\n                    </ButtonBase>\n                </FlexBox>\n            )}\n        </Box>\n    );\n};\n\nexport default CustomTable;\n"]},"metadata":{},"sourceType":"module"}