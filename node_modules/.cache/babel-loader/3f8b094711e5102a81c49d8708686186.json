{"ast":null,"code":"import { SET_EXERCISES, SET_WORKOUTS, SET_PROGRAMS, LOADING_USER, SET_USER, SET_ERRORS, ADD_EXERCISE, ADD_PROGRAM, ADD_WORKOUT, ADD_TO_SCHEDULE, DELETE_WORKOUT, UPDATE_NEW_EXERCISE, UPDATE_NEW_WORKOUT, UPDATE_NEW_PROGRAM, CLEAR_NEW_EXERCISE, CLEAR_NEW_WORKOUT, CLEAR_NEW_PROGRAM, SET_AUTHENTICATED, SET_MEALS, SET_PROGRESS, ADD_MEAL, UPDATE_NEW_MEAL, CLEAR_NEW_MEAL, SET_API_CALL, CLEAR_API_CALL, SET_SCHEDULE, CLEAR_PROGRESS, UPDATE_STORE_INFO, SET_STORE, ADD_STORE_ITEM, DELETE_STORE_ITEM, UPDATE_USER_DATA, ADD_NEW_MEAL, SET_RECENT_MESSAGES } from \"../types\";\nimport { db, auth } from \"../../config\";\nimport dayjs from \"dayjs\";\nimport LocalizedFormat from \"dayjs/plugin/localizedFormat\";\nimport { generateDateRange, scheduleExercises } from \"../../utils/functions\";\nimport axios from \"axios\";\ndayjs.extend(LocalizedFormat);\nexport const getUserData = () => dispatch => {\n  dispatch({\n    type: LOADING_USER\n  });\n  firebase.auth().onAuthStateChanged(user => {\n    user ? firebase.auth().currentUser.getIdToken().then(idToken => {\n      const FBIdToken = `Bearer ${idToken}`;\n      dispatch({\n        type: SET_AUTHENTICATED\n      });\n      axios.defaults.headers.common[\"Authorization\"] = FBIdToken;\n      axios.get(\"/user\").then(res => {\n        console.log(res.data);\n        const data = { ...res.data,\n          id: res.data.id\n        };\n        dispatch(setUserCollection(data));\n        console.log(`user data: ${JSON.stringify(data)}`);\n        dispatch({\n          type: SET_USER,\n          payload: data.user\n        });\n        data.user.admin && axios.get(\"/users\").then(res => {\n          const users = [...res.data.users];\n          const usersData = {\n            users: users\n          };\n          dispatch({\n            type: UPDATE_USER_DATA,\n            payload: usersData\n          });\n        });\n      }).catch(err => dispatch({\n        type: SET_ERRORS,\n        payload: err\n      }));\n    }).catch(err => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: err\n      });\n    }) : console.log(\"Please log in again.\");\n    dispatch({\n      type: LOADING_USER\n    });\n  });\n};\nexport const setUserCollection = data => dispatch => {\n  console.log(`Setting user collection: ${JSON.stringify(data.exercises)}`);\n  dispatch({\n    type: SET_EXERCISES,\n    payload: data.exercises\n  });\n  dispatch({\n    type: SET_WORKOUTS,\n    payload: data.workouts\n  });\n  dispatch({\n    type: SET_PROGRAMS,\n    payload: data.programs\n  });\n  dispatch({\n    type: SET_MEALS,\n    payload: data.meals\n  });\n  dispatch({\n    type: SET_SCHEDULE,\n    payload: data.schedule\n  });\n};\nexport const updateNewExercise = data => dispatch => {\n  dispatch({\n    type: UPDATE_NEW_EXERCISE,\n    payload: data\n  });\n};\nexport const submitExercise = (exercise, file) => dispatch => {\n  dispatch({\n    type: SET_API_CALL\n  });\n\n  if (file) {\n    const storageRef = firebase.storage().ref();\n    const fileRef = storageRef.child(file.name);\n    const fileUpload = fileRef.put(file);\n    fileUpload.on(\"state_changed\", snapshot => {\n      dispatch({\n        type: SET_PROGRESS,\n        payload: snapshot.bytesTransferred / snapshot.totalBytes * 100\n      });\n    }, error => {\n      console.error(error);\n    }, () => {\n      fileUpload.snapshot.ref.getDownloadURL().then(downloadURL => {\n        const data = {\n          name: \"videoURL\",\n          value: downloadURL\n        };\n        exercise.videoURL = downloadURL;\n        dispatch({\n          type: UPDATE_NEW_EXERCISE,\n          payload: data\n        });\n        axios.post(\"/workouts/exercise\", exercise).then(res => {\n          dispatch({\n            type: ADD_EXERCISE,\n            payload: exercise\n          });\n          dispatch({\n            type: CLEAR_PROGRESS\n          });\n          dispatch({\n            type: CLEAR_NEW_EXERCISE\n          });\n        }).catch(err => console.error(err));\n      });\n    });\n  } else {\n    alert(\"Please select a file.\");\n  }\n\n  dispatch({\n    type: CLEAR_API_CALL\n  });\n};\nexport const updateNewWorkout = data => dispatch => {\n  dispatch({\n    type: UPDATE_NEW_WORKOUT,\n    payload: data\n  });\n};\nexport const deleteWorkout = docId => dispatch => {\n  dispatch({\n    type: SET_API_CALL\n  });\n  axios.delete(`/workouts/${docId}`).then(res => {\n    dispatch({\n      type: DELETE_WORKOUT,\n      payload: docId\n    });\n  }).catch(err => {\n    console.error(err);\n  });\n  dispatch({\n    type: CLEAR_API_CALL\n  });\n};\nexport const getWorkoutId = () => async dispatch => {\n  console.log(\"fetching id\");\n  axios.get(\"/workouts/id\").then(res => {\n    console.log(res);\n    let data = {\n      name: \"id\",\n      value: res.data.id\n    };\n    dispatch(updateNewExercise(data));\n  }).catch(err => console.error(err));\n};\nexport const submitWorkout = (workout, file) => dispatch => {\n  dispatch({\n    type: SET_API_CALL\n  });\n\n  if (file) {\n    const storageRef = firebase.storage().ref();\n    const fileRef = storageRef.child(file.name);\n    const fileUpload = fileRef.put(file);\n    fileUpload.on(\"state_changed\", snapshot => {\n      dispatch({\n        type: SET_PROGRESS,\n        payload: snapshot.bytesTransferred / snapshot.totalBytes * 100\n      });\n    }, error => {\n      console.error(error);\n    }, () => {\n      fileUpload.snapshot.ref.getDownloadURL().then(downloadURL => {\n        const data = {\n          name: \"videoURL\",\n          value: downloadURL\n        };\n        workout.imageURL = downloadURL;\n        dispatch({\n          type: UPDATE_NEW_WORKOUT,\n          payload: data\n        });\n        axios.post(\"/workouts/workout\", workout).then(() => {\n          dispatch({\n            type: ADD_WORKOUT,\n            payload: workout\n          });\n          dispatch({\n            type: CLEAR_API_CALL\n          });\n          dispatch({\n            type: CLEAR_NEW_WORKOUT\n          });\n          dispatch({\n            type: CLEAR_PROGRESS\n          });\n        }).catch(err => {\n          dispatch({\n            type: SET_ERRORS,\n            payload: err\n          });\n          dispatch({\n            type: CLEAR_API_CALL\n          });\n        });\n      });\n    });\n  } else {\n    dispatch({\n      type: CLEAR_API_CALL\n    });\n    alert(\"Please select a file.\");\n  }\n};\nexport const updateNewProgram = data => dispatch => {\n  dispatch({\n    type: UPDATE_NEW_PROGRAM,\n    payload: data\n  });\n};\nexport const submitProgram = (program, file) => dispatch => {\n  dispatch({\n    type: \"SET_API_CALL\"\n  });\n\n  if (file) {\n    const storageRef = firebase.storage().ref();\n    const fileRef = storageRef.child(file.name);\n    const fileUpload = fileRef.put(file);\n    fileUpload.on(\"state_changed\", snapshot => {\n      dispatch({\n        type: SET_PROGRESS,\n        payload: snapshot.bytesTransferred / snapshot.totalBytes * 100\n      });\n    }, error => {\n      console.error(error);\n    }, () => {\n      fileUpload.snapshot.ref.getDownloadURL().then(downloadURL => {\n        const data = {\n          name: \"videoURL\",\n          value: downloadURL\n        };\n        program.imageURL = downloadURL;\n        dispatch({\n          type: UPDATE_NEW_PROGRAM,\n          payload: data\n        });\n        axios.post(\"/workouts/program\", program).then(() => {\n          dispatch({\n            type: ADD_PROGRAM,\n            payload: program\n          });\n          dispatch({\n            type: CLEAR_API_CALL\n          });\n          dispatch({\n            type: CLEAR_NEW_PROGRAM\n          });\n        }).catch(err => {\n          console.error(err);\n          dispatch({\n            type: CLEAR_API_CALL\n          });\n        });\n      });\n    });\n  } else {\n    alert(\"Please select a file.\");\n  }\n};\nexport const uploadToFirebase = (file, setImage) => dispatch => {\n  if (file) {\n    const storageRef = firebase.storage().ref();\n    const fileRef = storageRef.child(file.name);\n    const fileUpload = fileRef.put(file);\n    fileUpload.on(\"state_changed\", snapshot => {\n      let progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n    }, error => {\n      console.error(error);\n    }, () => {\n      fileUpload.snapshot.ref.getDownloadURL().then(downloadURL => {});\n    });\n  } else {\n    alert(\"Please select a file.\");\n  }\n};\nexport const addToSchedule = itemToSchedule => dispatch => {\n  dispatch({\n    type: SET_API_CALL\n  });\n  const type = itemToSchedule.type;\n  const exercises = [];\n\n  if (type === \"workout\") {\n    itemToSchedule.exercises.map((exercise, index) => {\n      exercise.date = itemToSchedule.date;\n      exercises.push(exercise);\n    });\n  }\n\n  if (type === \"program\") {\n    let dateIndex = 0;\n    itemToSchedule.dateRange = generateDateRange(itemToSchedule);\n    Object.values(itemToSchedule.workouts).map(week => {\n      week.sort();\n      return week.map(workout => {\n        workout.date = itemToSchedule.dateRange[dateIndex];\n        const workouts = scheduleExercises(workout);\n        workouts.exercises.forEach(exercise => {\n          exercises.push(exercise);\n        });\n      });\n    });\n  }\n\n  console.log(exercises);\n  exercises.forEach(exercise => {\n    axios.post(\"/schedule\", itemToSchedule).then(res => {\n      dispatch({\n        type: ADD_TO_SCHEDULE,\n        payload: itemToSchedule\n      });\n      dispatch({\n        type: CLEAR_API_CALL\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  });\n};\nexport const getScheduled = () => dispatch => {\n  axios.get(\"/schedule\").then(res => {//const thisMorning = dayjs(dayjs(Date.now()).format(\"L\")).valueOf();\n  });\n};\nexport const updateScheduledExerciseStatus = (scheduledItem, exercise, status) => dispatch => {\n  dispatch({\n    type: SET_API_CALL\n  });\n\n  if (exercise.week) {\n    scheduledItem.workouts[exercise.week][exercise.workoutIndex].exercises[exercise.exerciseIndex].status = status;\n  }\n\n  axios.post(\"/schedule/update\", scheduledItem).then(res => {\n    axios.get(`/schedule`).then(res => {\n      dispatch({\n        type: SET_SCHEDULE,\n        payload: res.data\n      });\n    });\n  }).catch(err => {\n    console.error(err);\n  });\n  dispatch({\n    type: CLEAR_API_CALL\n  });\n};\nexport const markExerciseComplete = (scheduledItem, exercise) => dispatch => {\n  dispatch({\n    type: SET_API_CALL\n  });\n\n  if (exercise.week) {\n    scheduledItem.workouts[exercise.week][exercise.workoutIndex].exercises[exercise.exerciseIndex].status = \"complete\";\n  }\n\n  axios.post(\"/schedule/update\", scheduledItem).then(res => {\n    axios.get(`/schedule`).then(res => {\n      dispatch({\n        type: SET_SCHEDULE,\n        payload: res.data\n      });\n    });\n  }).catch(err => {\n    console.error(err);\n  });\n  dispatch({\n    type: CLEAR_API_CALL\n  });\n}; //Store Actions\n\nexport const createStore = userId => dispatch => {\n  dispatch({\n    type: SET_API_CALL\n  });\n  axios.post(\"/store\", userId).then(res => {\n    dispatch({\n      type: UPDATE_STORE_INFO,\n      payload: res.data()\n    });\n  }).catch(err => {\n    console.error(err);\n  });\n  dispatch({\n    type: CLEAR_API_CALL\n  });\n};\nexport const getStoreData = storeId => dispatch => {\n  dispatch({\n    type: SET_API_CALL\n  });\n  axios.post(`/store/${storeId}`).then(res => {\n    dispatch({\n      type: SET_STORE,\n      payload: res.data()\n    });\n  }).catch(err => {\n    console.error(err);\n  });\n  dispatch({\n    type: CLEAR_API_CALL\n  });\n};\nexport const updateStoreInfo = (storeId, data) => dispatch => {\n  dispatch({\n    type: SET_API_CALL\n  });\n  axios.post(`/store/${storeId}/update`, data).then(() => {});\n};\nexport const getDemoData = () => dispatch => {\n  axios.get(\"/demo\").then(res => {\n    const data = { ...res.data.demoData,\n      id: res.data.id\n    };\n    console.log(data);\n    dispatch({\n      type: SET_EXERCISES,\n      payload: data.exercises\n    });\n    dispatch({\n      type: SET_WORKOUTS,\n      payload: data.workouts\n    });\n    dispatch({\n      type: SET_PROGRAMS,\n      payload: data.programs\n    });\n    dispatch({\n      type: SET_MEALS,\n      payload: data.meals\n    });\n  }).catch(err => console.error(err));\n};\nexport const submitMeal = (meal, file) => dispatch => {\n  dispatch({\n    type: SET_API_CALL\n  });\n\n  if (file) {\n    const storageRef = firebase.storage().ref();\n    const fileRef = storageRef.child(file.name);\n    const fileUpload = fileRef.put(file);\n    fileUpload.on(\"state_changed\", snapshot => {\n      dispatch({\n        type: SET_PROGRESS,\n        payload: snapshot.bytesTransferred / snapshot.totalBytes * 100\n      });\n    }, error => {\n      console.error(error);\n    }, () => {\n      fileUpload.snapshot.ref.getDownloadURL().then(downloadURL => {\n        const data = {\n          name: \"videoURL\",\n          value: downloadURL\n        };\n        meal.imageURL = downloadURL;\n        dispatch({\n          type: UPDATE_NEW_MEAL,\n          payload: data\n        });\n        axios.post(\"/meals\", meal).then(() => {\n          dispatch({\n            type: ADD_MEAL,\n            payload: meal\n          });\n          dispatch({\n            type: CLEAR_API_CALL\n          });\n          dispatch({\n            type: CLEAR_NEW_MEAL\n          });\n        }).catch(err => {\n          console.error(err);\n          dispatch({\n            type: CLEAR_API_CALL\n          });\n        });\n      });\n    });\n  } else {\n    alert(\"Please select a file.\");\n  }\n};\nexport const addToCollection = (docId, userId) => dispatch => {\n  dispatch({\n    type: SET_API_CALL\n  });\n  axios.post(`/user/${userId}/workouts/${docId}`).then(() => {}).catch(err => {\n    console.error(err);\n  });\n  dispatch({\n    type: CLEAR_API_CALL\n  });\n};","map":{"version":3,"sources":["C:/Reps/reps-ui-template/src/redux/actions/dataActions.js"],"names":["SET_EXERCISES","SET_WORKOUTS","SET_PROGRAMS","LOADING_USER","SET_USER","SET_ERRORS","ADD_EXERCISE","ADD_PROGRAM","ADD_WORKOUT","ADD_TO_SCHEDULE","DELETE_WORKOUT","UPDATE_NEW_EXERCISE","UPDATE_NEW_WORKOUT","UPDATE_NEW_PROGRAM","CLEAR_NEW_EXERCISE","CLEAR_NEW_WORKOUT","CLEAR_NEW_PROGRAM","SET_AUTHENTICATED","SET_MEALS","SET_PROGRESS","ADD_MEAL","UPDATE_NEW_MEAL","CLEAR_NEW_MEAL","SET_API_CALL","CLEAR_API_CALL","SET_SCHEDULE","CLEAR_PROGRESS","UPDATE_STORE_INFO","SET_STORE","ADD_STORE_ITEM","DELETE_STORE_ITEM","UPDATE_USER_DATA","ADD_NEW_MEAL","SET_RECENT_MESSAGES","db","auth","dayjs","LocalizedFormat","generateDateRange","scheduleExercises","axios","extend","getUserData","dispatch","type","firebase","onAuthStateChanged","user","currentUser","getIdToken","then","idToken","FBIdToken","defaults","headers","common","get","res","console","log","data","id","setUserCollection","JSON","stringify","payload","admin","users","usersData","catch","err","exercises","workouts","programs","meals","schedule","updateNewExercise","submitExercise","exercise","file","storageRef","storage","ref","fileRef","child","name","fileUpload","put","on","snapshot","bytesTransferred","totalBytes","error","getDownloadURL","downloadURL","value","videoURL","post","alert","updateNewWorkout","deleteWorkout","docId","delete","getWorkoutId","submitWorkout","workout","imageURL","updateNewProgram","submitProgram","program","uploadToFirebase","setImage","progress","addToSchedule","itemToSchedule","map","index","date","push","dateIndex","dateRange","Object","values","week","sort","forEach","getScheduled","updateScheduledExerciseStatus","scheduledItem","status","workoutIndex","exerciseIndex","markExerciseComplete","createStore","userId","getStoreData","storeId","updateStoreInfo","getDemoData","demoData","submitMeal","meal","addToCollection"],"mappings":"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","sourcesContent":["import {\r\n    SET_EXERCISES,\r\n    SET_WORKOUTS,\r\n    SET_PROGRAMS,\r\n    LOADING_USER,\r\n    SET_USER,\r\n    SET_ERRORS,\r\n    ADD_EXERCISE,\r\n    ADD_PROGRAM,\r\n    ADD_WORKOUT,\r\n    ADD_TO_SCHEDULE,\r\n    DELETE_WORKOUT,\r\n    UPDATE_NEW_EXERCISE,\r\n    UPDATE_NEW_WORKOUT,\r\n    UPDATE_NEW_PROGRAM,\r\n    CLEAR_NEW_EXERCISE,\r\n    CLEAR_NEW_WORKOUT,\r\n    CLEAR_NEW_PROGRAM,\r\n    SET_AUTHENTICATED,\r\n    SET_MEALS,\r\n    SET_PROGRESS,\r\n    ADD_MEAL,\r\n    UPDATE_NEW_MEAL,\r\n    CLEAR_NEW_MEAL,\r\n    SET_API_CALL,\r\n    CLEAR_API_CALL,\r\n    SET_SCHEDULE,\r\n    CLEAR_PROGRESS,\r\n    UPDATE_STORE_INFO,\r\n    SET_STORE,\r\n    ADD_STORE_ITEM,\r\n    DELETE_STORE_ITEM,\r\n    UPDATE_USER_DATA,\r\n    ADD_NEW_MEAL,\r\n    SET_RECENT_MESSAGES,\r\n} from \"../types\";\r\n\r\nimport { db, auth } from \"../../config\";\r\n\r\nimport dayjs from \"dayjs\";\r\nimport LocalizedFormat from \"dayjs/plugin/localizedFormat\";\r\n\r\nimport { generateDateRange, scheduleExercises } from \"../../utils/functions\";\r\n\r\nimport axios from \"axios\";\r\n\r\ndayjs.extend(LocalizedFormat);\r\n\r\nexport const getUserData = () => (dispatch) => {\r\n    dispatch({ type: LOADING_USER });\r\n\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n        user\r\n            ? firebase\r\n                  .auth()\r\n                  .currentUser.getIdToken()\r\n                  .then((idToken) => {\r\n                      const FBIdToken = `Bearer ${idToken}`;\r\n                      dispatch({ type: SET_AUTHENTICATED });\r\n                      axios.defaults.headers.common[\"Authorization\"] =\r\n                          FBIdToken;\r\n                      axios\r\n                          .get(\"/user\")\r\n                          .then((res) => {\r\n                              console.log(res.data);\r\n                              const data = {\r\n                                  ...res.data,\r\n                                  id: res.data.id,\r\n                              };\r\n\r\n                              dispatch(setUserCollection(data));\r\n                              console.log(`user data: ${JSON.stringify(data)}`);\r\n                              dispatch({\r\n                                  type: SET_USER,\r\n                                  payload: data.user,\r\n                              });\r\n\r\n                              data.user.admin &&\r\n                                  axios.get(\"/users\").then((res) => {\r\n                                      const users = [...res.data.users];\r\n\r\n                                      const usersData = {\r\n                                          users: users,\r\n                                      };\r\n                                      dispatch({\r\n                                          type: UPDATE_USER_DATA,\r\n                                          payload: usersData,\r\n                                      });\r\n                                  });\r\n                          })\r\n                          .catch((err) =>\r\n                              dispatch({ type: SET_ERRORS, payload: err })\r\n                          );\r\n                  })\r\n                  .catch((err) => {\r\n                      dispatch({ type: SET_ERRORS, payload: err });\r\n                  })\r\n            : console.log(\"Please log in again.\");\r\n        dispatch({ type: LOADING_USER });\r\n    });\r\n};\r\n\r\nexport const setUserCollection = (data) => (dispatch) => {\r\n    console.log(`Setting user collection: ${JSON.stringify(data.exercises)}`);\r\n    dispatch({ type: SET_EXERCISES, payload: data.exercises });\r\n    dispatch({ type: SET_WORKOUTS, payload: data.workouts });\r\n    dispatch({ type: SET_PROGRAMS, payload: data.programs });\r\n    dispatch({ type: SET_MEALS, payload: data.meals });\r\n    dispatch({ type: SET_SCHEDULE, payload: data.schedule });\r\n};\r\n\r\nexport const updateNewExercise = (data) => (dispatch) => {\r\n    dispatch({ type: UPDATE_NEW_EXERCISE, payload: data });\r\n};\r\n\r\nexport const submitExercise = (exercise, file) => (dispatch) => {\r\n    dispatch({ type: SET_API_CALL });\r\n    if (file) {\r\n        const storageRef = firebase.storage().ref();\r\n        const fileRef = storageRef.child(file.name);\r\n\r\n        const fileUpload = fileRef.put(file);\r\n\r\n        fileUpload.on(\r\n            \"state_changed\",\r\n            (snapshot) => {\r\n                dispatch({\r\n                    type: SET_PROGRESS,\r\n                    payload:\r\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100,\r\n                });\r\n            },\r\n            (error) => {\r\n                console.error(error);\r\n            },\r\n            () => {\r\n                fileUpload.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                    const data = {\r\n                        name: \"videoURL\",\r\n                        value: downloadURL,\r\n                    };\r\n                    exercise.videoURL = downloadURL;\r\n                    dispatch({ type: UPDATE_NEW_EXERCISE, payload: data });\r\n                    axios\r\n                        .post(\"/workouts/exercise\", exercise)\r\n                        .then((res) => {\r\n                            dispatch({ type: ADD_EXERCISE, payload: exercise });\r\n                            dispatch({ type: CLEAR_PROGRESS });\r\n                            dispatch({ type: CLEAR_NEW_EXERCISE });\r\n                        })\r\n                        .catch((err) => console.error(err));\r\n                });\r\n            }\r\n        );\r\n    } else {\r\n        alert(\"Please select a file.\");\r\n    }\r\n    dispatch({ type: CLEAR_API_CALL });\r\n};\r\n\r\nexport const updateNewWorkout = (data) => (dispatch) => {\r\n    dispatch({ type: UPDATE_NEW_WORKOUT, payload: data });\r\n};\r\n\r\nexport const deleteWorkout = (docId) => (dispatch) => {\r\n    dispatch({ type: SET_API_CALL });\r\n    axios\r\n        .delete(`/workouts/${docId}`)\r\n        .then((res) => {\r\n            dispatch({ type: DELETE_WORKOUT, payload: docId });\r\n        })\r\n        .catch((err) => {\r\n            console.error(err);\r\n        });\r\n    dispatch({ type: CLEAR_API_CALL });\r\n};\r\n\r\nexport const getWorkoutId = () => async (dispatch) => {\r\n    console.log(\"fetching id\");\r\n    axios\r\n        .get(\"/workouts/id\")\r\n        .then((res) => {\r\n            console.log(res);\r\n            let data = {\r\n                name: \"id\",\r\n                value: res.data.id,\r\n            };\r\n            dispatch(updateNewExercise(data));\r\n        })\r\n        .catch((err) => console.error(err));\r\n};\r\n\r\nexport const submitWorkout = (workout, file) => (dispatch) => {\r\n    dispatch({ type: SET_API_CALL });\r\n    if (file) {\r\n        const storageRef = firebase.storage().ref();\r\n        const fileRef = storageRef.child(file.name);\r\n\r\n        const fileUpload = fileRef.put(file);\r\n\r\n        fileUpload.on(\r\n            \"state_changed\",\r\n            (snapshot) => {\r\n                dispatch({\r\n                    type: SET_PROGRESS,\r\n                    payload:\r\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100,\r\n                });\r\n            },\r\n            (error) => {\r\n                console.error(error);\r\n            },\r\n            () => {\r\n                fileUpload.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                    const data = {\r\n                        name: \"videoURL\",\r\n                        value: downloadURL,\r\n                    };\r\n                    workout.imageURL = downloadURL;\r\n                    dispatch({ type: UPDATE_NEW_WORKOUT, payload: data });\r\n\r\n                    axios\r\n                        .post(\"/workouts/workout\", workout)\r\n                        .then(() => {\r\n                            dispatch({ type: ADD_WORKOUT, payload: workout });\r\n                            dispatch({ type: CLEAR_API_CALL });\r\n                            dispatch({ type: CLEAR_NEW_WORKOUT });\r\n                            dispatch({ type: CLEAR_PROGRESS });\r\n                        })\r\n                        .catch((err) => {\r\n                            dispatch({ type: SET_ERRORS, payload: err });\r\n                            dispatch({ type: CLEAR_API_CALL });\r\n                        });\r\n                });\r\n            }\r\n        );\r\n    } else {\r\n        dispatch({ type: CLEAR_API_CALL });\r\n        alert(\"Please select a file.\");\r\n    }\r\n};\r\n\r\nexport const updateNewProgram = (data) => (dispatch) => {\r\n    dispatch({ type: UPDATE_NEW_PROGRAM, payload: data });\r\n};\r\n\r\nexport const submitProgram = (program, file) => (dispatch) => {\r\n    dispatch({ type: \"SET_API_CALL\" });\r\n    if (file) {\r\n        const storageRef = firebase.storage().ref();\r\n        const fileRef = storageRef.child(file.name);\r\n\r\n        const fileUpload = fileRef.put(file);\r\n\r\n        fileUpload.on(\r\n            \"state_changed\",\r\n            (snapshot) => {\r\n                dispatch({\r\n                    type: SET_PROGRESS,\r\n                    payload:\r\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100,\r\n                });\r\n            },\r\n            (error) => {\r\n                console.error(error);\r\n            },\r\n            () => {\r\n                fileUpload.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                    const data = {\r\n                        name: \"videoURL\",\r\n                        value: downloadURL,\r\n                    };\r\n                    program.imageURL = downloadURL;\r\n                    dispatch({ type: UPDATE_NEW_PROGRAM, payload: data });\r\n                    axios\r\n                        .post(\"/workouts/program\", program)\r\n                        .then(() => {\r\n                            dispatch({ type: ADD_PROGRAM, payload: program });\r\n                            dispatch({ type: CLEAR_API_CALL });\r\n                            dispatch({ type: CLEAR_NEW_PROGRAM });\r\n                        })\r\n                        .catch((err) => {\r\n                            console.error(err);\r\n                            dispatch({ type: CLEAR_API_CALL });\r\n                        });\r\n                });\r\n            }\r\n        );\r\n    } else {\r\n        alert(\"Please select a file.\");\r\n    }\r\n};\r\n\r\nexport const uploadToFirebase = (file, setImage) => (dispatch) => {\r\n    if (file) {\r\n        const storageRef = firebase.storage().ref();\r\n        const fileRef = storageRef.child(file.name);\r\n\r\n        const fileUpload = fileRef.put(file);\r\n\r\n        fileUpload.on(\r\n            \"state_changed\",\r\n            (snapshot) => {\r\n                let progress =\r\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n            },\r\n            (error) => {\r\n                console.error(error);\r\n            },\r\n            () => {\r\n                fileUpload.snapshot.ref\r\n                    .getDownloadURL()\r\n                    .then((downloadURL) => {});\r\n            }\r\n        );\r\n    } else {\r\n        alert(\"Please select a file.\");\r\n    }\r\n};\r\n\r\nexport const addToSchedule = (itemToSchedule) => (dispatch) => {\r\n    dispatch({ type: SET_API_CALL });\r\n    const type = itemToSchedule.type;\r\n    const exercises = [];\r\n    if (type === \"workout\") {\r\n        itemToSchedule.exercises.map((exercise, index) => {\r\n            exercise.date = itemToSchedule.date;\r\n            exercises.push(exercise);\r\n        });\r\n    }\r\n    if (type === \"program\") {\r\n        let dateIndex = 0;\r\n        itemToSchedule.dateRange = generateDateRange(itemToSchedule);\r\n\r\n        Object.values(itemToSchedule.workouts).map((week) => {\r\n            week.sort();\r\n            return week.map((workout) => {\r\n                workout.date = itemToSchedule.dateRange[dateIndex];\r\n                const workouts = scheduleExercises(workout);\r\n                workouts.exercises.forEach((exercise) => {\r\n                    exercises.push(exercise);\r\n                });\r\n            });\r\n        });\r\n    }\r\n    console.log(exercises);\r\n    exercises.forEach((exercise) => {\r\n        axios\r\n            .post(\"/schedule\", itemToSchedule)\r\n            .then((res) => {\r\n                dispatch({ type: ADD_TO_SCHEDULE, payload: itemToSchedule });\r\n                dispatch({ type: CLEAR_API_CALL });\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n    });\r\n};\r\n\r\nexport const getScheduled = () => (dispatch) => {\r\n    axios.get(\"/schedule\").then((res) => {\r\n        //const thisMorning = dayjs(dayjs(Date.now()).format(\"L\")).valueOf();\r\n    });\r\n};\r\n\r\nexport const updateScheduledExerciseStatus =\r\n    (scheduledItem, exercise, status) => (dispatch) => {\r\n        dispatch({ type: SET_API_CALL });\r\n        if (exercise.week) {\r\n            scheduledItem.workouts[exercise.week][\r\n                exercise.workoutIndex\r\n            ].exercises[exercise.exerciseIndex].status = status;\r\n        }\r\n        axios\r\n            .post(\"/schedule/update\", scheduledItem)\r\n            .then((res) => {\r\n                axios.get(`/schedule`).then((res) => {\r\n                    dispatch({ type: SET_SCHEDULE, payload: res.data });\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n        dispatch({ type: CLEAR_API_CALL });\r\n    };\r\n\r\nexport const markExerciseComplete = (scheduledItem, exercise) => (dispatch) => {\r\n    dispatch({ type: SET_API_CALL });\r\n    if (exercise.week) {\r\n        scheduledItem.workouts[exercise.week][exercise.workoutIndex].exercises[\r\n            exercise.exerciseIndex\r\n        ].status = \"complete\";\r\n    }\r\n    axios\r\n        .post(\"/schedule/update\", scheduledItem)\r\n        .then((res) => {\r\n            axios.get(`/schedule`).then((res) => {\r\n                dispatch({ type: SET_SCHEDULE, payload: res.data });\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.error(err);\r\n        });\r\n    dispatch({ type: CLEAR_API_CALL });\r\n};\r\n\r\n//Store Actions\r\nexport const createStore = (userId) => (dispatch) => {\r\n    dispatch({ type: SET_API_CALL });\r\n    axios\r\n        .post(\"/store\", userId)\r\n        .then((res) => {\r\n            dispatch({ type: UPDATE_STORE_INFO, payload: res.data() });\r\n        })\r\n        .catch((err) => {\r\n            console.error(err);\r\n        });\r\n    dispatch({ type: CLEAR_API_CALL });\r\n};\r\n\r\nexport const getStoreData = (storeId) => (dispatch) => {\r\n    dispatch({ type: SET_API_CALL });\r\n    axios\r\n        .post(`/store/${storeId}`)\r\n        .then((res) => {\r\n            dispatch({ type: SET_STORE, payload: res.data() });\r\n        })\r\n        .catch((err) => {\r\n            console.error(err);\r\n        });\r\n    dispatch({ type: CLEAR_API_CALL });\r\n};\r\n\r\nexport const updateStoreInfo = (storeId, data) => (dispatch) => {\r\n    dispatch({ type: SET_API_CALL });\r\n    axios.post(`/store/${storeId}/update`, data).then(() => {});\r\n};\r\n\r\nexport const getDemoData = () => (dispatch) => {\r\n    axios\r\n        .get(\"/demo\")\r\n        .then((res) => {\r\n            const data = {\r\n                ...res.data.demoData,\r\n                id: res.data.id,\r\n            };\r\n            console.log(data);\r\n            dispatch({ type: SET_EXERCISES, payload: data.exercises });\r\n            dispatch({ type: SET_WORKOUTS, payload: data.workouts });\r\n            dispatch({ type: SET_PROGRAMS, payload: data.programs });\r\n            dispatch({ type: SET_MEALS, payload: data.meals });\r\n        })\r\n        .catch((err) => console.error(err));\r\n};\r\n\r\nexport const submitMeal = (meal, file) => (dispatch) => {\r\n    dispatch({ type: SET_API_CALL });\r\n    if (file) {\r\n        const storageRef = firebase.storage().ref();\r\n        const fileRef = storageRef.child(file.name);\r\n        const fileUpload = fileRef.put(file);\r\n\r\n        fileUpload.on(\r\n            \"state_changed\",\r\n            (snapshot) => {\r\n                dispatch({\r\n                    type: SET_PROGRESS,\r\n                    payload:\r\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100,\r\n                });\r\n            },\r\n            (error) => {\r\n                console.error(error);\r\n            },\r\n            () => {\r\n                fileUpload.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n                    const data = {\r\n                        name: \"videoURL\",\r\n                        value: downloadURL,\r\n                    };\r\n                    meal.imageURL = downloadURL;\r\n                    dispatch({ type: UPDATE_NEW_MEAL, payload: data });\r\n\r\n                    axios\r\n                        .post(\"/meals\", meal)\r\n                        .then(() => {\r\n                            dispatch({ type: ADD_MEAL, payload: meal });\r\n                            dispatch({ type: CLEAR_API_CALL });\r\n                            dispatch({ type: CLEAR_NEW_MEAL });\r\n                        })\r\n                        .catch((err) => {\r\n                            console.error(err);\r\n                            dispatch({ type: CLEAR_API_CALL });\r\n                        });\r\n                });\r\n            }\r\n        );\r\n    } else {\r\n        alert(\"Please select a file.\");\r\n    }\r\n};\r\n\r\nexport const addToCollection = (docId, userId) => (dispatch) => {\r\n    dispatch({ type: SET_API_CALL });\r\n    axios\r\n        .post(`/user/${userId}/workouts/${docId}`)\r\n        .then(() => {})\r\n        .catch((err) => {\r\n            console.error(err);\r\n        });\r\n    dispatch({ type: CLEAR_API_CALL });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}