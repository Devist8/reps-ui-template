{"ast":null,"code":"import { useSelector, useDispatch } from \"react-redux\";\nimport firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport { SET_AUTHENTICATED } from \"../redux/types\";\nimport axios from \"axios\";\nimport dayjs from \"dayjs\";\nimport LocalizedFormat from \"dayjs/plugin/localizedFormat\";\nexport const getWorkoutCount = program => {\n  let count = 0;\n  Object.values(program.workouts).forEach(week => {\n    count += week.length;\n  });\n  return count;\n};\nexport const generateDateRange = itemToSchedule => {\n  const prefferedDays = [\"0\", \"1\", \"3\", \"5\"];\n  const newDateRange = [];\n  let dateRange = [...itemToSchedule.dateRange];\n  let workoutCount = itemToSchedule.workoutCount ? itemToSchedule.workoutCount : getWorkoutCount(itemToSchedule);\n  let currentDate = dateRange[0];\n\n  while (workoutCount > 0) {\n    if (prefferedDays.includes(dayjs(currentDate).format(\"d\"))) {\n      newDateRange.push(currentDate);\n      workoutCount = workoutCount - 1;\n      currentDate = currentDate + 86400000;\n    } else {\n      currentDate = currentDate + 86400000;\n    }\n  }\n\n  return newDateRange;\n};\nexport const scheduleExercises = workout => {\n  workout.exercises.map((exercise, index) => {\n    exercise.date = workout.date;\n  });\n  return workout;\n};\nexport const sortObjsByTitle = array => {\n  array.sort((a, b) => {\n    let titleA = a.title.toUpperCase();\n    let titleB = b.title.toUpperCase();\n\n    if (titleA < titleB) {\n      return -1;\n    }\n\n    if (titleA > titleB) {\n      return 1;\n    }\n\n    return 0;\n  });\n  return array;\n};\nexport const sortObjsByDifficulty = array => {\n  array.sort((a, b) => {\n    let difficultyA = parseFloat(a.difficulty);\n    let difficultyB = parseFloat(b.difficulty);\n\n    if (difficultyA < difficultyB) {\n      return -1;\n    }\n\n    if (difficultyA > difficultyB) {\n      return 1;\n    }\n\n    return 0;\n  });\n  return array;\n};","map":{"version":3,"sources":["C:/Reps/reps-ui-template/src/utils/functions.js"],"names":["useSelector","useDispatch","firebase","SET_AUTHENTICATED","axios","dayjs","LocalizedFormat","getWorkoutCount","program","count","Object","values","workouts","forEach","week","length","generateDateRange","itemToSchedule","prefferedDays","newDateRange","dateRange","workoutCount","currentDate","includes","format","push","scheduleExercises","workout","exercises","map","exercise","index","date","sortObjsByTitle","array","sort","a","b","titleA","title","toUpperCase","titleB","sortObjsByDifficulty","difficultyA","parseFloat","difficulty","difficultyB"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,kBAAP;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AAEA,OAAO,MAAMC,eAAe,GAAIC,OAAD,IAAa;AACxC,MAAIC,KAAK,GAAG,CAAZ;AACAC,EAAAA,MAAM,CAACC,MAAP,CAAcH,OAAO,CAACI,QAAtB,EAAgCC,OAAhC,CAAyCC,IAAD,IAAU;AAC9CL,IAAAA,KAAK,IAAIK,IAAI,CAACC,MAAd;AACH,GAFD;AAGA,SAAON,KAAP;AACH,CANM;AAQP,OAAO,MAAMO,iBAAiB,GAAIC,cAAD,IAAoB;AACjD,QAAMC,aAAa,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAtB;AACA,QAAMC,YAAY,GAAG,EAArB;AACA,MAAIC,SAAS,GAAG,CAAC,GAAGH,cAAc,CAACG,SAAnB,CAAhB;AACA,MAAIC,YAAY,GAAGJ,cAAc,CAACI,YAAf,GACbJ,cAAc,CAACI,YADF,GAEbd,eAAe,CAACU,cAAD,CAFrB;AAGA,MAAIK,WAAW,GAAGF,SAAS,CAAC,CAAD,CAA3B;;AAEA,SAAOC,YAAY,GAAG,CAAtB,EAAyB;AACrB,QAAIH,aAAa,CAACK,QAAd,CAAuBlB,KAAK,CAACiB,WAAD,CAAL,CAAmBE,MAAnB,CAA0B,GAA1B,CAAvB,CAAJ,EAA4D;AACxDL,MAAAA,YAAY,CAACM,IAAb,CAAkBH,WAAlB;AACAD,MAAAA,YAAY,GAAGA,YAAY,GAAG,CAA9B;AACAC,MAAAA,WAAW,GAAGA,WAAW,GAAG,QAA5B;AACH,KAJD,MAIO;AACHA,MAAAA,WAAW,GAAGA,WAAW,GAAG,QAA5B;AACH;AACJ;;AACD,SAAOH,YAAP;AACH,CAnBM;AAqBP,OAAO,MAAMO,iBAAiB,GAAIC,OAAD,IAAa;AAC1CA,EAAAA,OAAO,CAACC,SAAR,CAAkBC,GAAlB,CAAsB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACvCD,IAAAA,QAAQ,CAACE,IAAT,GAAgBL,OAAO,CAACK,IAAxB;AACH,GAFD;AAIA,SAAOL,OAAP;AACH,CANM;AAQP,OAAO,MAAMM,eAAe,GAAIC,KAAD,IAAW;AACtCA,EAAAA,KAAK,CAACC,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACjB,QAAIC,MAAM,GAAGF,CAAC,CAACG,KAAF,CAAQC,WAAR,EAAb;AACA,QAAIC,MAAM,GAAGJ,CAAC,CAACE,KAAF,CAAQC,WAAR,EAAb;;AAEA,QAAIF,MAAM,GAAGG,MAAb,EAAqB;AACjB,aAAO,CAAC,CAAR;AACH;;AAED,QAAIH,MAAM,GAAGG,MAAb,EAAqB;AACjB,aAAO,CAAP;AACH;;AAED,WAAO,CAAP;AACH,GAbD;AAcA,SAAOP,KAAP;AACH,CAhBM;AAkBP,OAAO,MAAMQ,oBAAoB,GAAIR,KAAD,IAAW;AAC3CA,EAAAA,KAAK,CAACC,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACjB,QAAIM,WAAW,GAAGC,UAAU,CAACR,CAAC,CAACS,UAAH,CAA5B;AACA,QAAIC,WAAW,GAAGF,UAAU,CAACP,CAAC,CAACQ,UAAH,CAA5B;;AAEA,QAAIF,WAAW,GAAGG,WAAlB,EAA+B;AAC3B,aAAO,CAAC,CAAR;AACH;;AAED,QAAIH,WAAW,GAAGG,WAAlB,EAA+B;AAC3B,aAAO,CAAP;AACH;;AAED,WAAO,CAAP;AACH,GAbD;AAeA,SAAOZ,KAAP;AACH,CAjBM","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\nimport { SET_AUTHENTICATED } from \"../redux/types\";\r\nimport axios from \"axios\";\r\nimport dayjs from \"dayjs\";\r\nimport LocalizedFormat from \"dayjs/plugin/localizedFormat\";\r\n\r\nexport const getWorkoutCount = (program) => {\r\n    let count = 0;\r\n    Object.values(program.workouts).forEach((week) => {\r\n        count += week.length;\r\n    });\r\n    return count;\r\n};\r\n\r\nexport const generateDateRange = (itemToSchedule) => {\r\n    const prefferedDays = [\"0\", \"1\", \"3\", \"5\"];\r\n    const newDateRange = [];\r\n    let dateRange = [...itemToSchedule.dateRange];\r\n    let workoutCount = itemToSchedule.workoutCount\r\n        ? itemToSchedule.workoutCount\r\n        : getWorkoutCount(itemToSchedule);\r\n    let currentDate = dateRange[0];\r\n\r\n    while (workoutCount > 0) {\r\n        if (prefferedDays.includes(dayjs(currentDate).format(\"d\"))) {\r\n            newDateRange.push(currentDate);\r\n            workoutCount = workoutCount - 1;\r\n            currentDate = currentDate + 86400000;\r\n        } else {\r\n            currentDate = currentDate + 86400000;\r\n        }\r\n    }\r\n    return newDateRange;\r\n};\r\n\r\nexport const scheduleExercises = (workout) => {\r\n    workout.exercises.map((exercise, index) => {\r\n        exercise.date = workout.date;\r\n    });\r\n\r\n    return workout;\r\n};\r\n\r\nexport const sortObjsByTitle = (array) => {\r\n    array.sort((a, b) => {\r\n        let titleA = a.title.toUpperCase();\r\n        let titleB = b.title.toUpperCase();\r\n\r\n        if (titleA < titleB) {\r\n            return -1;\r\n        }\r\n\r\n        if (titleA > titleB) {\r\n            return 1;\r\n        }\r\n\r\n        return 0;\r\n    });\r\n    return array;\r\n};\r\n\r\nexport const sortObjsByDifficulty = (array) => {\r\n    array.sort((a, b) => {\r\n        let difficultyA = parseFloat(a.difficulty);\r\n        let difficultyB = parseFloat(b.difficulty);\r\n\r\n        if (difficultyA < difficultyB) {\r\n            return -1;\r\n        }\r\n\r\n        if (difficultyA > difficultyB) {\r\n            return 1;\r\n        }\r\n\r\n        return 0;\r\n    });\r\n\r\n    return array;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}